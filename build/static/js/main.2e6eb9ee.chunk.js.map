{"version":3,"sources":["containers/HeaderContainer.js","components/Card.js","containers/CardContainer.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","className","onChange","this","props","changeSortingMethod","value","onClick","sortByColor","sortByCity","React","Component","Card","color","age","backgroundColor","style","getStyle","image","src","alt","fullName","address","email","defaultProps","CardContainer","user","userNameObj","name","title","first","last","userPicture","picture","userDob","dob","userLocation","location","userAddress","city","state","postcode","userEmail","medium","getCard","gender","street","number","country","coordinates","latitude","longitude","timezone","offset","description","login","uuid","username","password","salt","md5","sha1","sha256","date","registered","phone","cell","id","large","thumbnail","nat","App","getInitialUsers","userStorage","window","sessionStorage","getItem","JSON","parse","compareAsc","x","y","compareDesc","users","sort","loadUsers","bind","scrollVertical","scrollHorizontal","compareColorAsc","compareCityAsc","compareColorDesc","compareCityDesc","length","forEach","index","push","key","fetch","then","response","json","data","console","log","setState","concat","results","removeItem","setItem","stringify","onscroll","isBottomEnd","innerHeight","scrollY","document","body","offsetHeight","loadSrollEnd","event","isRightEnd","target","scrollWidth","scrollLeft","clientWidth","setTimeout","sortByCityAsc","sortByCityDesc","sorted","a","b","sortByColorAsc","sortByColorDesc","getColorPriority","priorities","colorPriority","onScroll","showUsers","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e6eb9ee.chunk.js","sourcesContent":["import React from 'react';\n\nexport class HeaderContainer extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Header\">\n\t\t\t\t<h1>Qoala Test</h1>\n\t\t\t\t<div className=\"Action\">\n\t\t\t\t\t<select onChange={this.props.changeSortingMethod}>\n\t\t\t\t\t\t<option value=\"ASC\">Sort ASC</option>\n\t\t\t\t\t\t<option value=\"DESC\">Sort DESC</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<button onClick={this.props.sortByColor}>Color</button>\n\t\t\t\t\t<button onClick={this.props.sortByCity}>Cities</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\n\nconst RED = '#feb6cb';\nconst GREEN = '#d5fed3';\nconst BLUE = '#c3f4fe';\n\nexport class Card extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tgetStyle() {\n\t\tlet color;\n\t\tconst age = this.props.age;\n\n\t\tswitch (true) {\n\t\t\tcase (age < 21) :\n\t\t\t\tcolor = RED;\n\t\t\t\tbreak;\n\t\t\tcase (age > 56) :\n\t\t\t\tcolor = BLUE;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcolor = GREEN;\n\t\t}\n\n\t\treturn {\n\t\t\tbackgroundColor: color\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Card\" style={this.getStyle()}>\n\t\t\t\t<div className=\"Photo\">\n\t\t\t\t\t{this.props.image && <img src={this.props.image} alt={this.props.fullName}/>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Fullname\">\n\t\t\t\t\t{this.props.fullName}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Age\">\n\t\t\t\t\t{this.props.age} years old\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Order-reversed\">\n\t\t\t\t\t<div className=\"Address\">\n\t\t\t\t\t\t{this.props.address}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"Email\">\n\t\t\t\t\t\t{this.props.email}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCard.defaultProps = {\n\timage: null,\n\tfullName: null,\n\tage: null,\n\taddress: null,\n\temail: null\n};\n","import React from 'react';\nimport {Card} from \"../components/Card\";\n\n// const usersData = require('./../assets/users');\nexport class CardContainer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tgetCard() {\n\t\tconst user = this.props.user;\n\t\tconst userNameObj = user.name;\n\t\tconst fullName = userNameObj.title + '. ' + userNameObj.first + ' ' + userNameObj.last;\n\t\tconst userPicture = user.picture;\n\t\tconst userDob = user.dob;\n\t\tconst userLocation = user.location;\n\t\tconst userAddress = userLocation.city + ', ' + userLocation.state + ', ' + userLocation.postcode;\n\t\tconst userEmail = user.email;\n\n\t\treturn (\n\t\t\t<Card image={userPicture.medium} fullName={fullName} age={userDob.age} address={userAddress} email={userEmail} />\n\t\t);\n\t}\n\n\trender() {\n\t\treturn this.getCard();\n\t}\n}\n\nCardContainer.defaultProps = {\n\tgender: null,\n\tname: {\n\t\ttitle: null,\n\t\tfirst: null,\n\t\tlast: null\n\t},\n\tlocation: {\n\t\tstreet: {\n\t\t\tnumber: null,\n\t\t\tname: null\n\t\t},\n\t\tcity: null,\n\t\tstate: null,\n\t\tcountry: null,\n\t\tpostcode: null,\n\t\tcoordinates: {\n\t\t\tlatitude: null,\n\t\t\tlongitude: null\n\t\t},\n\t\ttimezone: {\n\t\t\toffset: null,\n\t\t\tdescription: null\n\t\t}\n\t},\n\temail: null,\n\tlogin: {\n\t\tuuid: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tsalt: null,\n\t\tmd5: null,\n\t\tsha1: null,\n\t\tsha256: null\n\t},\n\tdob: {\n\t\tdate: null,\n\t\tage: null\n\t},\n\tregistered: {\n\t\tdate: null,\n\t\tage: null\n\t},\n\tphone: null,\n\tcell: null,\n\tid: {\n\t\tname: null,\n\t\tvalue: null\n\t},\n\tpicture: {\n\t\tlarge: null,\n\t\tmedium: null,\n\t\tthumbnail: null\n\t},\n\tnat: null\n};\n","import React from 'react';\nimport './App.scss';\nimport {HeaderContainer} from './containers/HeaderContainer';\nimport {CardContainer} from \"./containers/CardContainer\";\n\nconst userStorageId = 'users';\n\nexport class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusers: this.getInitialUsers(),\n\t\t\tsort: 'ASC'\n\t\t};\n\t\tthis.loadUsers = this.loadUsers.bind(this);\n\t\tthis.scrollVertical = this.scrollVertical.bind(this);\n\t\tthis.scrollHorizontal = this.scrollHorizontal.bind(this);\n\t\tthis.sortByCity = this.sortByCity.bind(this);\n\t\tthis.sortByColor = this.sortByColor.bind(this);\n\t\tthis.compareColorAsc = this.compareColorAsc.bind(this);\n\t\tthis.compareCityAsc = this.compareCityAsc.bind(this);\n\t\tthis.compareColorDesc = this.compareColorDesc.bind(this);\n\t\tthis.compareCityDesc = this.compareCityDesc.bind(this);\n\t\tthis.changeSortingMethod = this.changeSortingMethod.bind(this);\n\t}\n\n\tgetInitialUsers = () => {\n\t\tconst userStorage = window.sessionStorage.getItem(userStorageId);\n\n\t\treturn (userStorage) ? JSON.parse(userStorage) : [];\n\t};\n\n\tcomponentDidMount() {\n\t\tif (this.state.users.length <= 0) {\n\t\t\tthis.loadUsers();\n\t\t}\n\t\tthis.scrollVertical();\n\t}\n\n\tshowUsers() {\n\t\tlet users = [];\n\n\t\tthis.state.users.forEach((user, index) => {\n\t\t\tusers.push(<CardContainer key={index} user={user}/>);\n\t\t});\n\n\t\treturn users;\n\t}\n\n\tloadUsers() {\n\t\tfetch('https://randomuser.me/api/?results=10')\n\t\t\t.then(response => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log('data : ', data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tusers: this.state.users.concat(data.results)\n\t\t\t\t});\n\t\t\t\twindow.sessionStorage.removeItem(userStorageId);\n\t\t\t\twindow.sessionStorage.setItem(userStorageId, JSON.stringify(this.state.users));\n\t\t\t});\n\t}\n\n\tscrollVertical() {\n\t\twindow.onscroll = () => {\n\t\t\tconst isBottomEnd = ((window.innerHeight + window.scrollY) >= document.body.offsetHeight);\n\t\t\tthis.loadSrollEnd(isBottomEnd, false);\n\t\t};\n\t}\n\n\tscrollHorizontal(event) {\n\t\tlet isRightEnd = (event.target.scrollWidth === (event.target.scrollLeft + event.target.clientWidth));\n\t\tsetTimeout(\n\t\t\tthis.loadSrollEnd(false, isRightEnd)\n\t\t\t, 1000);\n\t}\n\n\tloadSrollEnd(isBottomEnd, isRightEnd) {\n\t\tif ((isBottomEnd || isRightEnd) && this.state.users.length < 100) {\n\t\t\tthis.loadUsers();\n\t\t}\n\t}\n\n\tsortByCity() {\n\t\tif (this.state.sort === 'ASC') {\n\t\t\tthis.sortByCityAsc();\n\t\t} else {\n\t\t\tthis.sortByCityDesc();\n\t\t}\n\t}\n\n\tsortByCityAsc() {\n\t\tconst sorted = this.state.users.sort(this.compareCityAsc);\n\t\tthis.setState({\n\t\t\tusers: sorted\n\t\t});\n\t}\n\n\tsortByCityDesc() {\n\t\tconst sorted = this.state.users.sort(this.compareCityDesc);\n\t\tthis.setState({\n\t\t\tusers: sorted\n\t\t});\n\t}\n\n\tcompareCityAsc(a, b) {\n\t\treturn this.compareAsc(a.location.city, b.location.city);\n\t}\n\n\tsortByColor() {\n\t\tif (this.state.sort === 'ASC') {\n\t\t\tthis.sortByColorAsc();\n\t\t} else {\n\t\t\tthis.sortByColorDesc();\n\t\t}\n\t}\n\n\tcompareCityDesc(a, b) {\n\t\treturn this.compareDesc(a.location.city, b.location.city);\n\t}\n\n\tsortByColorAsc() {\n\t\tconst sorted = this.state.users.sort(this.compareColorAsc);\n\t\tthis.setState({\n\t\t\tusers: sorted\n\t\t});\n\t}\n\n\tsortByColorDesc() {\n\t\tconst sorted = this.state.users.sort(this.compareColorDesc);\n\t\tthis.setState({\n\t\t\tusers: sorted\n\t\t});\n\t}\n\n\tcompareColorAsc(a, b) {\n\t\treturn this.compareAsc(this.getColorPriority(a.dob.age), this.getColorPriority(b.dob.age));\n\t}\n\n\tcompareColorDesc(a, b) {\n\t\treturn this.compareDesc(this.getColorPriority(a.dob.age), this.getColorPriority(b.dob.age));\n\t}\n\n\tcompareAsc = (x, y) => {\n\t\tswitch (true) {\n\t\t\tcase (x < y) :\n\t\t\t\treturn -1;\n\t\t\tcase (x > y) :\n\t\t\t\treturn 1;\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t};\n\n\tcompareDesc = (x, y) => {\n\t\tswitch (true) {\n\t\t\tcase (x < y) :\n\t\t\t\treturn 1;\n\t\t\tcase (x > y) :\n\t\t\t\treturn -1;\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t};\n\n\tgetColorPriority(age) {\n\t\tconst priorities = {\n\t\t\tgreen: 1,\n\t\t\tblue: 2,\n\t\t\tred: 3\n\t\t};\n\n\t\tlet colorPriority = 0;\n\t\tswitch (true) {\n\t\t\tcase (age < 21) :\n\t\t\t\tcolorPriority = priorities['red'];\n\t\t\t\tbreak;\n\t\t\tcase (age > 56) :\n\t\t\t\tcolorPriority = priorities['blue'];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcolorPriority = priorities['green'];\n\t\t}\n\n\n\t\treturn colorPriority;\n\t}\n\n\tchangeSortingMethod(event) {\n\t\tthis.setState({\n\t\t\tsort: event.target.value\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<HeaderContainer sortByCity={this.sortByCity} sortByColor={this.sortByColor}\n\t\t\t\t                 changeSortingMethod={this.changeSortingMethod}/>\n\t\t\t\t<div className=\"Cards\" onScroll={this.scrollHorizontal}>\n\t\t\t\t\t{this.showUsers()}\n\t\t\t\t\t<div className=\"Clearfix\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}